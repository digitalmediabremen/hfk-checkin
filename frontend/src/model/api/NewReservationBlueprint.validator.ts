/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import Ajv from 'ajv';
import NewReservationBlueprint from './NewReservationBlueprint';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));


export const NewReservationBlueprintSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "allOf": [
    {
      "$ref": "#/definitions/Partial<Pick<default,\"end\"|\"begin\"|\"resource_uuid\"|\"number_of_extra_attendees\"|\"message\"|\"purpose\"|\"agreed_to_phone_contact\"|\"exclusive_resource_usage\"|\"templateId\"|undefined>>"
    },
    {
      "defaultProperties": [
      ],
      "properties": {
        "attendees": {
          "items": {
            "$ref": "#/definitions/Pick<{readonlyprofile_id:never;readonlyuuid:never;readonlyis_external:never;readonlyis_organizer:never;readonlystate:never;readonlydisplay_name:never;first_name:string;last_name:string;phone:string|null;},WritableKeys<Attendance&Pick<PrivateProfile,\"phone\">>>"
          },
          "type": "array"
        },
        "resource": {
          "$ref": "#/definitions/default"
        },
        "selectedUnitId": {
          "type": "string"
        },
        "units": {
          "items": {
            "$ref": "#/definitions/default_1"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  ],
  "definitions": {
    "Partial<Pick<default,\"end\"|\"begin\"|\"resource_uuid\"|\"number_of_extra_attendees\"|\"message\"|\"purpose\"|\"agreed_to_phone_contact\"|\"exclusive_resource_usage\"|\"templateId\"|undefined>>": {
      "defaultProperties": [
      ],
      "properties": {
        "agreed_to_phone_contact": {
          "type": "boolean"
        },
        "begin": {
          "description": "Enables basic storage and retrieval of dates and times.",
          "format": "date-time",
          "type": "string"
        },
        "end": {
          "description": "Enables basic storage and retrieval of dates and times.",
          "format": "date-time",
          "type": "string"
        },
        "exclusive_resource_usage": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "number_of_extra_attendees": {
          "type": "number"
        },
        "purpose": {
          "enum": [
            "FOR_APPOINTMENT",
            "FOR_COUNCIL_MEETING",
            "FOR_EXAM",
            "FOR_EXAM_PREPARATION",
            "FOR_PICKUP",
            "FOR_TEACHING",
            "OTHER"
          ],
          "type": "string"
        },
        "resource_uuid": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pick<{readonlyprofile_id:never;readonlyuuid:never;readonlyis_external:never;readonlyis_organizer:never;readonlystate:never;readonlydisplay_name:never;first_name:string;last_name:string;phone:string|null;},WritableKeys<Attendance&Pick<PrivateProfile,\"phone\">>>": {
      "defaultProperties": [
      ],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": [
            "null",
            "string"
          ]
        }
      },
      "required": [
        "first_name",
        "last_name",
        "phone"
      ],
      "type": "object"
    },
    "default": {
      "defaultProperties": [
      ],
      "properties": {
        "access_allowed_to_current_user": {
          "type": "boolean"
        },
        "access_delegates": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "access_restricted": {
          "type": "boolean"
        },
        "alternative_names": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "area": {
          "type": [
            "null",
            "string"
          ]
        },
        "capacity": {
          "type": [
            "null",
            "number"
          ]
        },
        "description": {
          "type": [
            "null",
            "string"
          ]
        },
        "display_name": {
          "type": "string"
        },
        "display_numbers": {
          "type": [
            "null",
            "string"
          ]
        },
        "features": {
          "anyOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "type": "null"
            }
          ]
        },
        "floor_name": {
          "type": [
            "null",
            "string"
          ]
        },
        "floor_number": {
          "type": [
            "null",
            "number"
          ]
        },
        "name": {
          "type": "string"
        },
        "reservable": {
          "type": "boolean"
        },
        "reservable_max_days_in_advance": {
          "type": [
            "null",
            "number"
          ]
        },
        "reservable_min_days_in_advance": {
          "type": [
            "null",
            "number"
          ]
        },
        "slot_size": {
          "type": [
            "null",
            "string"
          ]
        },
        "unit": {
          "$ref": "#/definitions/default_1"
        },
        "uuid": {
          "type": "string"
        }
      },
      "required": [
        "access_allowed_to_current_user",
        "access_delegates",
        "access_restricted",
        "alternative_names",
        "area",
        "capacity",
        "description",
        "display_name",
        "display_numbers",
        "features",
        "floor_name",
        "floor_number",
        "name",
        "reservable",
        "reservable_max_days_in_advance",
        "reservable_min_days_in_advance",
        "slot_size",
        "unit",
        "uuid"
      ],
      "type": "object"
    },
    "default_1": {
      "defaultProperties": [
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "slug",
        "uuid"
      ],
      "type": "object"
    }
  }
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
export const isNewReservationBlueprint = ajv.compile(NewReservationBlueprintSchema) as ValidateFunction<NewReservationBlueprint>;
export default function validate(value: unknown): NewReservationBlueprint {
  if (isNewReservationBlueprint(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(isNewReservationBlueprint.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'NewReservationBlueprint'}) +
      '\n\n' +
      inspect(value),
    );
  }
}
