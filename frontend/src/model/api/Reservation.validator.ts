/* tslint:disable */
// generated by typescript-json-validator
import {inspect} from 'util';
import Ajv from 'ajv';
import Reservation from './Reservation';
export const ajv = new Ajv({"allErrors":true,"coerceTypes":false,"format":"fast","nullable":true,"unicode":true,"uniqueItems":true,"useDefaults":true});

ajv.addMetaSchema(require('ajv/lib/refs/json-schema-draft-06.json'));

export const ReservationSchema = {
  "$schema": "http://json-schema.org/draft-07/schema#",
  "defaultProperties": [
  ],
  "definitions": {
    "Pick<default,\"id\"|\"first_name\"|\"last_name\"|\"phone\"|\"verified\">": {
      "defaultProperties": [
      ],
      "properties": {
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "number"
        },
        "last_name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "verified": {
          "type": "boolean"
        }
      },
      "required": [
        "first_name",
        "id",
        "last_name",
        "phone",
        "verified"
      ],
      "type": "object"
    },
    "ReservationReason": {
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "number"
    },
    "Resource": {
      "defaultProperties": [
      ],
      "type": "object"
    }
  },
  "properties": {
    "agreed_to_phone_contact": {
      "type": "boolean"
    },
    "attendees": {
      "items": {
        "$ref": "#/definitions/Pick<default,\"id\"|\"first_name\"|\"last_name\"|\"phone\"|\"verified\">"
      },
      "type": "array"
    },
    "comment": {
      "type": "string"
    },
    "created_at": {
      "description": "Enables basic storage and retrieval of dates and times.",
      "format": "date-time",
      "type": "string"
    },
    "end": {
      "description": "Enables basic storage and retrieval of dates and times.",
      "format": "date-time",
      "type": "string"
    },
    "exclusive_resource_usage": {
      "type": "boolean"
    },
    "is_deleted": {
      "type": "boolean"
    },
    "number_of_extra_attendees": {
      "type": "number"
    },
    "organizer": {
      "$ref": "#/definitions/Pick<default,\"id\"|\"first_name\"|\"last_name\"|\"phone\"|\"verified\">"
    },
    "reason": {
      "$ref": "#/definitions/ReservationReason"
    },
    "room_uuid": {
      "type": "string"
    },
    "rooms": {
      "items": {
        "$ref": "#/definitions/Resource"
      },
      "type": "array"
    },
    "start": {
      "description": "Enables basic storage and retrieval of dates and times.",
      "format": "date-time",
      "type": "string"
    },
    "status": {
      "enum": [
        "OK"
      ],
      "type": "string"
    },
    "total_number_of_attendees": {
      "type": "number"
    },
    "updated_at": {
      "description": "Enables basic storage and retrieval of dates and times.",
      "format": "date-time",
      "type": "string"
    },
    "uuid": {
      "type": "string"
    }
  },
  "required": [
    "agreed_to_phone_contact",
    "attendees",
    "comment",
    "created_at",
    "end",
    "exclusive_resource_usage",
    "is_deleted",
    "number_of_extra_attendees",
    "organizer",
    "reason",
    "room_uuid",
    "rooms",
    "start",
    "status",
    "total_number_of_attendees",
    "updated_at",
    "uuid"
  ],
  "type": "object"
};
export type ValidateFunction<T> = ((data: unknown) => data is T) & Pick<Ajv.ValidateFunction, 'errors'>
export const isReservation = ajv.compile(ReservationSchema) as ValidateFunction<Reservation>;
export default function validate(value: unknown): Reservation {
  if (isReservation(value)) {
    return value;
  } else {
    throw new Error(
      ajv.errorsText(isReservation.errors!.filter((e: any) => e.keyword !== 'if'), {dataVar: 'Reservation'}) +
      '\n\n' +
      inspect(value),
    );
  }
}
